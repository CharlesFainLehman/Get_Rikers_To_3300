admissions %>%
mutate(ADMITTED_DT = as.Date(ADMITTED_DT, format = "%m/%d/%Y")) %>%
#filter(ADMITTED_DT >= as.Date("2020-01-01"), ADMITTED_DT <= as.Date("2021-06-01")) %>%
count(ADMITTED_DT) -> admit.summary
discharges %>%
mutate(DISCHARGED_DT = as.Date(DISCHARGED_DT, format = "%m/%d/%Y")) %>%
#filter(DISCHARGED_DT >= as.Date("2020-01-01"), DISCHARGED_DT <= as.Date("2021-06-01")) %>%
count(DISCHARGED_DT) -> discharge.summary
merge(admit.summary, discharge.summary, by.x = 'ADMITTED_DT', by.y = 'DISCHARGED_DT') %>%
rename(Admissions = n.x, Discharges = n.y, Date = ADMITTED_DT) %>%
pivot_longer(cols = !Date, names_to = 'Category', values_to = 'n') %>%
mutate(Year = year(Date), Month = month(Date)) %>%
group_by(Category, Year, Month) %>%
summarise(n = sum(n)) %>%
ggplot(aes(x=Year + (Month-1)/12, y=n, color = Category)) +
geom_point() + geom_line()
merge(admit.summary, discharge.summary, by.x = 'ADMITTED_DT', by.y = 'DISCHARGED_DT') %>%
rename(Admissions = n.x, Discharges = n.y, Date = ADMITTED_DT) %>%
pivot_longer(cols = !Date, names_to = 'Category', values_to = 'n') %>%
mutate(Year = year(Date), Month = month(Date)) %>%
group_by(Category, Year, Month) %>%
summarise(n = sum(n)) %>%
pivot_wider(names_from = Category, values_from = n)
merge(admit.summary, discharge.summary, by.x = 'ADMITTED_DT', by.y = 'DISCHARGED_DT') %>%
rename(Admissions = n.x, Discharges = n.y, Date = ADMITTED_DT) %>%
pivot_longer(cols = !Date, names_to = 'Category', values_to = 'n') %>%
mutate(Year = year(Date), Month = month(Date)) %>%
group_by(Category, Year, Month) %>%
summarise(n = sum(n)) %>%
pivot_wider(names_from = Category, values_from = n) %>%
ggplot(aes(x=Year + (Month-1)/12, y=Admissions - Discharges, color = Category)) +
geom_point() + geom_line()
merge(admit.summary, discharge.summary, by.x = 'ADMITTED_DT', by.y = 'DISCHARGED_DT') %>%
rename(Admissions = n.x, Discharges = n.y, Date = ADMITTED_DT) %>%
pivot_longer(cols = !Date, names_to = 'Category', values_to = 'n') %>%
mutate(Year = year(Date), Month = month(Date)) %>%
group_by(Category, Year, Month) %>%
summarise(n = sum(n)) %>%
pivot_wider(names_from = Category, values_from = n) %>%
ggplot(aes(x=Year + (Month-1)/12, y=Admissions - Discharges)) +
geom_point() + geom_line()
merge(admit.summary, discharge.summary, by.x = 'ADMITTED_DT', by.y = 'DISCHARGED_DT') %>%
rename(Admissions = n.x, Discharges = n.y, Date = ADMITTED_DT) %>%
pivot_longer(cols = !Date, names_to = 'Category', values_to = 'n') %>%
mutate(Year = year(Date), Month = month(Date)) %>%
group_by(Category, Year, Month) %>%
summarise(n = sum(n)) %>%
pivot_wider(names_from = Category, values_from = n) %>%
ggplot(aes(x=Year + (Month-1)/12, y=Admissions - Discharges)) +
geom_col()
admissions <- read.csv("Downloads/Inmate_Admissions.csv")
discharges <- read.csv("Downloads/Inmate_Discharges.csv")
admissions %>%
mutate(ADMITTED_DT = as.Date(ADMITTED_DT, format = "%m/%d/%Y")) %>%
#filter(ADMITTED_DT >= as.Date("2020-01-01"), ADMITTED_DT <= as.Date("2021-06-01")) %>%
count(ADMITTED_DT) -> admit.summary
discharges %>%
mutate(DISCHARGED_DT = as.Date(DISCHARGED_DT, format = "%m/%d/%Y")) %>%
#filter(DISCHARGED_DT >= as.Date("2020-01-01"), DISCHARGED_DT <= as.Date("2021-06-01")) %>%
count(DISCHARGED_DT) -> discharge.summary
merge(admit.summary, discharge.summary, by.x = 'ADMITTED_DT', by.y = 'DISCHARGED_DT') %>%
rename(Admissions = n.x, Discharges = n.y, Date = ADMITTED_DT) %>%
pivot_longer(cols = !Date, names_to = 'Category', values_to = 'n') %>%
mutate(Year = year(Date), Month = month(Date)) %>%
group_by(Category, Year, Month) %>%
summarise(n = sum(n)) %>%
pivot_wider(names_from = Category, values_from = n) %>%
ggplot(aes(x=Year + (Month-1)/12, y=Admissions - Discharges)) +
geom_col()
merge(admit.summary, discharge.summary, by.x = 'ADMITTED_DT', by.y = 'DISCHARGED_DT') %>%
rename(Admissions = n.x, Discharges = n.y, Date = ADMITTED_DT) %>%
pivot_longer(cols = !Date, names_to = 'Category', values_to = 'n') %>%
mutate(Year = year(Date), Month = month(Date)) %>%
group_by(Category, Year, Month) %>%
summarise(n = sum(n)) %>%
pivot_wider(names_from = Category, values_from = n) %>%
mutate(Difference = Admissions - Discharges,
cd = cumsum(Difference)) %>%
ggplot(aes(x=Year + (Month-1)/12, y=cd)) +
geom_col()
merge(admit.summary, discharge.summary, by.x = 'ADMITTED_DT', by.y = 'DISCHARGED_DT') %>%
rename(Admissions = n.x, Discharges = n.y, Date = ADMITTED_DT) %>%
pivot_longer(cols = !Date, names_to = 'Category', values_to = 'n') %>%
mutate(Year = year(Date), Month = month(Date)) %>%
group_by(Category, Year, Month) %>%
summarise(n = sum(n)) %>%
pivot_wider(names_from = Category, values_from = n) %>%
ggplot(aes(x=Year + (Month-1)/12, y=Admissions - Discharges, fill = (Year == 2020 & Month >= 3 | Year == 2021 & Month <= 6)) +
geom_col()
merge(admit.summary, discharge.summary, by.x = 'ADMITTED_DT', by.y = 'DISCHARGED_DT') %>%
rename(Admissions = n.x, Discharges = n.y, Date = ADMITTED_DT) %>%
pivot_longer(cols = !Date, names_to = 'Category', values_to = 'n') %>%
mutate(Year = year(Date), Month = month(Date)) %>%
group_by(Category, Year, Month) %>%
summarise(n = sum(n)) %>%
pivot_wider(names_from = Category, values_from = n) %>%
ggplot(aes(x=Year + (Month-1)/12, y=Admissions - Discharges, fill = (Year == 2020 & Month >= 3 | Year == 2021 & Month <= 6))) +
geom_col()
merge(admit.summary, discharge.summary, by.x = 'ADMITTED_DT', by.y = 'DISCHARGED_DT') %>%
rename(Admissions = n.x, Discharges = n.y, Date = ADMITTED_DT) %>%
pivot_longer(cols = !Date, names_to = 'Category', values_to = 'n') %>%
mutate(Year = year(Date), Month = month(Date)) %>%
group_by(Category, Year, Month) %>%
summarise(n = sum(n)) %>%
pivot_wider(names_from = Category, values_from = n) %>%
ggplot(aes(x=Year + (Month-1)/12, y=Admissions - Discharges, fill = (Year == 2020 & Month >= 3 | Year == 2021 & Month <= 6))) +
geom_col() +
theme(legend.position = 'none')
merge(admit.summary, discharge.summary, by.x = 'ADMITTED_DT', by.y = 'DISCHARGED_DT') %>%
rename(Admissions = n.x, Discharges = n.y, Date = ADMITTED_DT) %>%
pivot_longer(cols = !Date, names_to = 'Category', values_to = 'n') %>%
mutate(Year = year(Date), Month = month(Date)) %>%
group_by(Category, Year, Month) %>%
summarise(n = sum(n)) %>%
pivot_wider(names_from = Category, values_from = n) %>%
ggplot(aes(x=Year + (Month-1)/12, y=Admissions - Discharges, fill = (Year == 2020 & Month >= 3 | Year == 2021 & Month <= 6))) +
geom_col() +
theme(legend.position = 'none')
day <- read.csv("Desktop/DOC_Inmates_InCustody_Daily_20200318.csv")
library(tidyverse)
head(day)
date = as.Date("2020-03-18")
day %>%
mutate(ADMITTED_DT = as.Date(ADMITTED_DT, format = "%Y-%m-%d"),
LoS = date - ADMITTED_DT)
date = as.Date("2020-03-18")
day %>%
mutate(ADMITTED_DT = as.Date(ADMITTED_DT, format = "%Y-%m-%d"),
LoS = date - ADMITTED_DT) %>%
summarise(n = n(),
mean.LoS = mean(LoS))
date = as.Date("2020-03-18")
day %>%
mutate(ADMITTED_DT = as.Date(ADMITTED_DT, format = "%Y-%m-%d"),
LoS = date - ADMITTED_DT) %>%
summarise(n = n(),
mean.LoS = mean(LoS))
day %>%
mutate(ADMITTED_DT = as.Date(ADMITTED_DT, format = "%Y-%m-%d"),
LoS = date - ADMITTED_DT) %>%
slice_min(LoS, n = n() - 1) %>%
summarise(n = n(),
mean.LoS = mean(LoS))
date = as.Date("2020-03-18")
day %>%
mutate(ADMITTED_DT = as.Date(ADMITTED_DT, format = "%Y-%m-%d"),
LoS = date - ADMITTED_DT) %>%
summarise(n = n(),
mean.LoS = mean(LoS))
day %>%
mutate(ADMITTED_DT = as.Date(ADMITTED_DT, format = "%Y-%m-%d"),
LoS = date - ADMITTED_DT) %>%
slice_min(LoS, n = 5418) %>%
summarise(n = n(),
mean.LoS = mean(LoS))
library(babynames)
head(babynames)
babynames %>% filter(sex == "M", name == "Logan") %>% ggplot(aes(x=year, y=n)) + geom_line()
babynames %>% filter(sex == "M", name == "Logan") %>% ggplot(aes(x=year, y=prop)) + geom_line()
ggsave("Desktop/logan.png", width = 8, height = 5)
hc <- read.csv("MI/Briefs/Hate Crimes/dat/FBI Hate Crime/hate_crime.csv")
head(hc)
library(tidyverse)
head(hc)
hc %>%
filter(BIAS_DESC == "Anti-Asian")
hc %>%
filter(BIAS_DESC == "Anti-Asian") %>%
count(OFFENDER_RACE)
hc %>%
filter(BIAS_DESC == "Anti-Asian") %>%
count(OFFENDER_RACE) %>%
mutate(p = n/sum(n))
hc %>%
filter(BIAS_DESC == "Anti-Asian",
OFFENDER_RACE != "") %>%
count(OFFENDER_RACE) %>%
mutate(p = n/sum(n))
hc %>%
filter(BIAS_DESC == "Anti-Asian",
OFFENDER_RACE != "") %>%
count(OFFENDER_RACE) %>%
mutate(p = scales::percent(n/sum(n)))
theme_MI <- function() {
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text = element_text(family = "Helvetica", color = "black"),
panel.background = element_blank(),
panel.border = element_blank(),
axis.text = element_text(family = "Helvetica", color = "black"),
axis.line = element_blank(),
axis.ticks = element_line())
}
MI_palette <- c('#9DCDED', '#55A5DA', "#5986A3", "#8A55DA", "#1C618E", '#5563DA')
rm(beacon_colors)
rm(theme_beacon())
rm(theme_beacon
)
ak <- read.csv(sep = "\t", "MI/Briefs/Rikers 3300/dat/ICPSR_31261/DS0001/31261-0001-Data.tsv")
head(ak)
library(tidyverse)
ak %>% filter(grepl("RICHMOND", county))
ak %>% filter(grepl("ARTHUR KILL", faclname))
ak %>% filter(grepl("FULTON", faclname))
View(theme_MI)
View(theme_MI)
leoka <- readRDS("Downloads/ucr_leoka_yearly_1960_2020_rds/leoka_yearly_1960_2020.rds")
head(leoka)
leoka %>% filter(grepl("portland", agency_name))
library(tidyverse)
theme_set(theme_minimaler())
library(tidyverse)
theme_set(theme_minimaler())
leoka %>% filter(grepl("portland", agency_name))
leoka %>% filter(grepl("portland", agency_name), state == "OR")
leoka %>% filter(grepl("portland", agency_name), state_abb == "OR")
library(tidyverse)
theme_set(theme_minimaler())
#Portland ORI9: OR0260200
#msa: 685
leoka %>%
filter(year == 2020, msa == 685)
leoka %>%
filter(msa == 685) %>%
count(year)
library(tidyverse)
theme_set(theme_minimaler())
#Portland ORI: OR02602
#msa: 685
leoka %>%
filter(msa == 685) %>%
count(year) %>%
ggplot(aes(x=year, y=n)) +
geom_col()
library(tidyverse)
theme_set(theme_minimaler())
#Portland ORI: OR02602
#msa: 685
leoka %>%
filter(msa == 685) %>%
count(year) %>%
ggplot(aes(x=year, y=n)) +
geom_col() +
labs(title = "Number of Agencies in LEOKA Data", subtitle = "MSA 685, 1960 - 2020")
ggsave("Desktop/plot1.png", width = 8, height = 5, bg = 'white')
leoka %>%
filter(msa == 685, year == 1992) %>%
pull(ori) %>% unique()
leoka %>%
filter(msa == ori %in% departments) %>%
mutate(portland = ori == OR02602) %>%
count(portland, year, wt = total_employees_officers)
library(tidyverse)
theme_set(theme_minimaler())
#Portland ORI: OR02602
#msa: 685
departments <- leoka %>%
filter(msa == 685, year == 1992) %>%
pull(ori) %>% unique()
leoka %>%
filter(msa == ori %in% departments) %>%
mutate(portland = ori == OR02602) %>%
count(portland, year, wt = total_employees_officers)
source("~/.active-rstudio-document", echo=TRUE)
library(tidyverse)
theme_set(theme_minimaler())
#Portland ORI: OR02602
#msa: 685
departments <- leoka %>%
filter(msa == 685, year == 1992) %>%
pull(ori) %>% unique()
leoka %>%
filter(msa == ori %in% departments) %>%
mutate(portland = ori == 'OR02602') %>%
count(portland, year, wt = total_employees_officers)
library(tidyverse)
theme_set(theme_minimaler())
#Portland ORI: OR02602
#msa: 685
departments <- leoka %>%
filter(msa == 685, year == 1992) %>%
pull(ori) %>% unique()
leoka %>%
filter(msa == ori %in% departments) %>%
mutate(portland = ori == 'OR02602')
library(tidyverse)
theme_set(theme_minimaler())
#Portland ORI: OR02602
#msa: 685
departments <- leoka %>%
filter(msa == 685, year == 1992) %>%
pull(ori) %>% unique()
leoka %>%
filter(ori %in% departments) %>%
mutate(portland = ori == 'OR02602') %>%
count(portland, year, wt = total_employees_officers)
library(tidyverse)
theme_set(theme_minimaler())
#Portland ORI: OR02602
#msa: 685
departments <- leoka %>%
filter(msa == 685, year == 1992) %>%
pull(ori) %>% unique()
leoka %>%
filter(ori %in% departments, year >= 1992) %>%
mutate(portland = ori == 'OR02602') %>%
count(portland, year, wt = total_employees_officers) %>%
ggplot(aes(x=year, y=n, color = portland)) +
geom_col()
#ggsave("Desktop/plot1.png", width = 8, height = 5, bg = 'white')
library(tidyverse)
theme_set(theme_minimaler())
#Portland ORI: OR02602
#msa: 685
departments <- leoka %>%
filter(msa == 685, year == 1992) %>%
pull(ori) %>% unique()
leoka %>%
filter(ori %in% departments, year >= 1992) %>%
mutate(portland = ori == 'OR02602') %>%
count(portland, year, wt = total_employees_officers) %>%
ggplot(aes(x=year, y=n, color = portland)) +
geom_line(()
library(tidyverse)
theme_set(theme_minimaler())
#Portland ORI: OR02602
#msa: 685
departments <- leoka %>%
filter(msa == 685, year == 1992) %>%
pull(ori) %>% unique()
leoka %>%
filter(ori %in% departments, year >= 1992) %>%
mutate(portland = ori == 'OR02602') %>%
count(portland, year, wt = total_employees_officers) %>%
ggplot(aes(x=year, y=n, color = portland)) +
geom_line()
#ggsave("Desktop/plot1.png", width = 8, height = 5, bg = 'white')
library(tidyverse)
theme_set(theme_minimaler())
#Portland ORI: OR02602
#msa: 685
departments <- leoka %>%
filter(msa == 685, year == 1960) %>%
pull(ori) %>% unique()
leoka %>%
filter(ori %in% departments) %>%
mutate(portland = ori == 'OR02602') %>%
count(portland, year, wt = total_employees_officers) %>%
ggplot(aes(x=year, y=n, color = portland)) +
geom_line()
#ggsave("Desktop/plot1.png", width = 8, height = 5, bg = 'white')
library(tidyverse)
theme_set(theme_minimaler())
#Portland ORI: OR02602
#msa: 685
departments <- leoka %>%
filter(msa == 685, year == 1960) %>%
pull(ori) %>% unique()
leoka %>%
filter(ori %in% departments) %>%
mutate(portland = ori == 'OR02602') %>%
count(portland, year, wt = total_employees_officers) %>%
ggplot(aes(x=year, y=n, color = portland)) +
geom_line()
ggsave("Desktop/plot2.png", width = 8, height = 5, bg = 'white')
census <- haven::read_dta("Downloads/ICPSR_38323/DS0001/38323-0001-Data.rda")
census <- readRDA("Downloads/ICPSR_38323/DS0001/38323-0001-Data.rda")
census <- load("Downloads/ICPSR_38323/DS0001/38323-0001-Data.rda")
head(da38323.0001)
library(tidyverse)
filter(da38323.0001, grepl("Rikers", facname))
filter(da38323.0001, grepl("Rikers", FACNAME))
filter(da38323.0001, grepl("new york", FACNAME))
filter(da38323.0001, grepl("new york", FACNAME, ignore.case = T))
install.packages("rsconnect")
install.packages("rsconnect")
setwd("MI/Briefs/Rikers 3300/Get_Rikers_To_3300/")
library(shiny)
library(dplyr)
library(ggplot2)
#there's a trailing ' before all the codes
#so that excel doesn't screw it up every time I open it
#Yes, I know, a mess
charges <- read.csv("dat/charge features.csv") %>% mutate(Code = gsub("'", "", Code))
dic <- left_join(read.csv("dat/Daily_Inmates_In_Custody.csv"), charges, by = c('TOP_CHARGE' = 'Code')) %>%
mutate(RACE = recode(RACE, "O" = "Other", "B" = "Black", "W" = "White", "I" = "Indian", "A" = "Asian", "U" = "Unknown"),
GENDER = recode(GENDER, "M" = "Male", "F" = "Female"),
AGE = as.numeric(AGE),
AGE = ifelse(is.na(AGE), -1, AGE),
INMATE_STATUS_CODE = recode(INMATE_STATUS_CODE, "CS" = "City Sentenced", "CSP" = "City Sentenced", "DE" = "Pretrial Detainee", "DEP" = "Pretrial Criminal Parole", "DNS" = "State Sentenced", "DPV" = "Pretrial Technical Parole", "SCO"= "State Sentenced", "SSR" = "State Sentenced"),
FMV = as.character(FMV),
FMV = ifelse(is.na(FMV), "None", recode(FMV, "F" = "Felony", "M" = "Misdemeanor", "V" = "Violation")),
Type = as.character(Type),
Type = ifelse(is.na(Type), "None", Type),
CUSTODY_LEVEL = recode(CUSTODY_LEVEL, "MIN" = "Minimum", "MED" = "Medium", "MAX" = "Maximum"))
read.csv("dat/Daily_Inmates_In_Custody.csv")
library(shiny)
library(dplyr)
library(ggplot2)
#there's a trailing ' before all the codes
#so that excel doesn't screw it up every time I open it
#Yes, I know, a mess
charges <- read.csv("dat/charge features.csv") %>% mutate(Code = gsub("'", "", Code))
dic <- left_join(read.csv("dat/Daily_Inmates_In_Custody.csv"), charges, by = c('top_charge' = 'Code')) %>%
mutate(race = recode(race, "O" = "Other", "B" = "Black", "W" = "White", "I" = "Indian", "A" = "Asian", "U" = "Unknown"),
gender = recode(gender, "M" = "Male", "F" = "Female"),
age = as.numeric(age),
age = ifelse(is.na(age), -1, age),
inmae_status_code = recode(inmae_status_code, "CS" = "City Sentenced", "CSP" = "City Sentenced", "DE" = "Pretrial Detainee", "DEP" = "Pretrial Criminal Parole", "DNS" = "State Sentenced", "DPV" = "Pretrial Technical Parole", "SCO"= "State Sentenced", "SSR" = "State Sentenced"),
FMV = as.character(FMV),
FMV = ifelse(is.na(FMV), "None", recode(FMV, "F" = "Felony", "M" = "Misdemeanor", "V" = "Violation")),
Type = as.character(Type),
Type = ifelse(is.na(Type), "None", Type),
custody_level = recode(custody_level, "MIN" = "Minimum", "MED" = "Medium", "MAX" = "Maximum"))
library(shiny)
library(dplyr)
library(ggplot2)
#there's a trailing ' before all the codes
#so that excel doesn't screw it up every time I open it
#Yes, I know, a mess
charges <- read.csv("dat/charge features.csv") %>% mutate(Code = gsub("'", "", Code))
dic <- left_join(read.csv("dat/Daily_Inmates_In_Custody.csv"), charges, by = c('top_charge' = 'Code')) %>%
mutate(race = recode(race, "O" = "Other", "B" = "Black", "W" = "White", "I" = "Indian", "A" = "Asian", "U" = "Unknown"),
gender = recode(gender, "M" = "Male", "F" = "Female"),
age = as.numeric(age),
age = ifelse(is.na(age), -1, age),
inmate_status_code = recode(inmae_status_code, "CS" = "City Sentenced", "CSP" = "City Sentenced", "DE" = "Pretrial Detainee", "DEP" = "Pretrial Criminal Parole", "DNS" = "State Sentenced", "DPV" = "Pretrial Technical Parole", "SCO"= "State Sentenced", "SSR" = "State Sentenced"),
FMV = as.character(FMV),
FMV = ifelse(is.na(FMV), "None", recode(FMV, "F" = "Felony", "M" = "Misdemeanor", "V" = "Violation")),
Type = as.character(Type),
Type = ifelse(is.na(Type), "None", Type),
custody_level = recode(custody_level, "MIN" = "Minimum", "MED" = "Medium", "MAX" = "Maximum"))
library(shiny)
library(dplyr)
library(ggplot2)
#there's a trailing ' before all the codes
#so that excel doesn't screw it up every time I open it
#Yes, I know, a mess
charges <- read.csv("dat/charge features.csv") %>% mutate(Code = gsub("'", "", Code))
dic <- left_join(read.csv("dat/Daily_Inmates_In_Custody.csv"), charges, by = c('top_charge' = 'Code')) %>%
mutate(race = recode(race, "O" = "Other", "B" = "Black", "W" = "White", "I" = "Indian", "A" = "Asian", "U" = "Unknown"),
gender = recode(gender, "M" = "Male", "F" = "Female"),
age = as.numeric(age),
age = ifelse(is.na(age), -1, age),
inmate_status_code = recode(inmate_status_code, "CS" = "City Sentenced", "CSP" = "City Sentenced", "DE" = "Pretrial Detainee", "DEP" = "Pretrial Criminal Parole", "DNS" = "State Sentenced", "DPV" = "Pretrial Technical Parole", "SCO"= "State Sentenced", "SSR" = "State Sentenced"),
FMV = as.character(FMV),
FMV = ifelse(is.na(FMV), "None", recode(FMV, "F" = "Felony", "M" = "Misdemeanor", "V" = "Violation")),
Type = as.character(Type),
Type = ifelse(is.na(Type), "None", Type),
custody_level = recode(custody_level, "MIN" = "Minimum", "MED" = "Medium", "MAX" = "Maximum"))
todays.pop <- nrow(dic)
ui <- fluidPage(
titlePanel("Can You Get to 3,300?"),
fluidRow(
column(3,
wellPanel(
selectInput("sentence", "Sentence", c("City Sentenced", "Pretrial Detainee", "Pretrial Criminal Parole", "Pretrial Technical Parole", "State Sentenced"), multiple = T, selected = c("City Sentenced", "Pretrial Detainee", "Pretrial Criminal Parole", "Pretrial Technical Parole", "State Sentenced")),
selectInput('fmv', "", c("Felony", "Misdemeanor", "Violation"), multiple = T, selected = c("Felony", "Misdemeanor", "Violation")),
selectInput('offense', "Offense", c("Narcotics", "Sex Offense", "Violent", "Weapons", "Vehicle", "Misc", "Property"), multiple = T, selected = c("Narcotics", "Sex Offense", "Violent", "Weapons", "Vehicle", "Misc", "Property")),
selectInput('custody', "Custody Level", c("Minimum", "Medium", "Maximum"), multiple = T, selected = c("Minimum", "Medium", "Maximum"))
)
),
column(6,
plotOutput("hist")
),
column(3,
wellPanel(
selectInput('race', "Race", c("Asian", "Black", "Indian", "Other", "Unknown", "White"), multiple = T, selected = c("Asian", "Black", "Indian", "Other", "Unknown", "White")),
selectInput('sex', "Sex", c("Male", "Female"), multiple = T, selected = c("Male", "Female")),
sliderInput('age', "Age", min = 0, max = 150, c(0, 150)),
checkboxInput('srg', "Include Prison Gang Members", value = T),
checkboxInput('bradh', "Include Mental Health Evaluated", value = T),
)
)
)
)
server <- function(input, output, session) {
dic.summary <- reactive({
new.length <- dic %>%
filter(race %in% c(input$race, ""),
gender %in% c(input$sex, ""),
age %in% c(input$age[1]:input$age[2], -1),
inmate_status_code %in% c(input$sentence, ""),
FMV %in% c(input$fmv, "None"),
Type %in% c(input$offense, "None"),
custody_level %in% c(input$custody, ""),
if(input$srg == F) {srg_flg != "Y"} else {srg_flg %in% c("Y", "N", "")},
if(input$bradh == F) {bradh != "Y"} else {bradh %in% c("Y", "N", "")}
) %>%
nrow()
data.frame(version = factor(c("Today's Population", "Your version", "3,300"),
levels = c("Today's Population", "Your version", "3,300")),
count = c(todays.pop, new.length, 3300))
})
output$hist <- renderPlot({
ggplot(dic.summary(), aes(x=version, y=count)) +
geom_col(fill = "#55A5DA") +
geom_text(aes(label = scales::comma(count, accuracy = 1), y = count + 120)) +
scale_y_continuous(labels = scales::comma) +
theme_minimal() +
theme(panel.grid = element_blank(),
axis.title = element_blank())
}, res = 96)
}
shinyApp(ui, server)
read.csv("dat/Daily_Inmates_In_Custody.csv") %>%
rename_with(tolower())
read.csv("dat/Daily_Inmates_In_Custody.csv") %>%
rename_with(tolower)
read.csv("dat/Daily_Inmates_In_Custody.csv") %>%
rename_with(toupper)
